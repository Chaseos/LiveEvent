/**
 * Copyright 2019 Hadi Lashkari Ghouchani

 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at

 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'org.jetbrains.dokka'

def gradlePropertiesFile = rootProject.file('build-system/keystore.gradle')
if (gradlePropertiesFile.exists()) {
    apply from: '../build-system/keystore.gradle'
} else {
    ext {
        api_key = ''
    }
}

group = groupId
project.archivesBaseName = artifactId
version = libVersion

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

bintray {
    user = 'hadilq'
    key = api_key
    configurations = ['archives']
    publish = true
    override = false
    pkg {
        repo = 'AndroidArch'
        name = 'LiveEvent'
        version {
            name = libVersion
        }
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId groupId
            artifactId artifactId
            version libVersion
            name artifactId
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    excludes = ['**/*.kt']
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    // options.encoding = 'UTF-8'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}